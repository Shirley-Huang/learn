<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

<!--    加载配置文件，无spring容器扫描配置文件，需进行此配置，否则无法读取配置文件-->
<!--    <properties resource="dataSource.properties"/>-->

    <settings>
        <!--  全局的开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认true  -开启二级缓存的开关     -->
<!--        <setting name="cacheEnabled" value="true" />-->
        <!--  延迟加载的全局开关，当开启时，所有关联对象都会延迟加载，特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态，默认false      -->
<!--        <setting name="lazyLoadingEnabled" value="true" />-->
        <!--   指定日志的具体实现     -->
        <setting name="logImpl" value="STDOUT_LOGGING"/>
        <!--是否开启自动驼峰命名规则映射 -->
<!--        <setting name="mapUnderscoreToCamelCase" value="true"/>-->
    </settings>

    <typeAliases>
        <typeAlias alias="User" type="com.dandan.model.pojo.User"/>
        <typeAlias alias="UserAddress" type="com.dandan.model.pojo.UserAddress"/>
        <typeAlias alias="UserAuthentication" type="com.dandan.model.pojo.UserAuthentication"/>


        <typeAlias alias="Sex" type="com.dandan.model.typeHandler.SexEnumTypeHandler"/>

        <!--        jiangyun-->
        <typeAlias type="com.dandan.common.model.pojo.Bool" alias="Bool"/>
        <typeAlias alias="Order" type="com.dandan.model.pojo.jiangyun.Order"/>
        <typeAlias type="com.dandan.model.pojo.jiangyun.OrderStatusContrail" alias="OrderStatusContrail"/>
        <typeAlias type="com.dandan.model.pojo.jiangyun.OrderResponsibilityEmployeeContrail" alias="OrderResponsibilityEmployeeContrail"/>
        <typeAlias type="com.dandan.model.pojo.jiangyun.OrderProperty" alias="OrderProperty"/>
        <typeAlias type="com.dandan.model.pojo.jiangyun.OrderProduct" alias="OrderProduct"/>
        <typeAlias type="com.dandan.model.pojo.jiangyun.OrderExtraChargeItemApply" alias="OrderExtraChargeItemApply"/>
        <typeAlias type="com.dandan.model.pojo.jiangyun.result.OrderArtisanIncome" alias="OrderArtisanIncome"/>
        <typeAlias type="com.dandan.model.pojo.jiangyun.result.TakeOrderTime" alias="TakeOrderTime"/>
        <typeAlias type="com.dandan.model.pojo.jiangyun.OrderArtisanRewardPunishment" alias="OrderArtisanRewardPunishment"/>

        <typeAlias type="com.dandan.model.pojo.jiangyun.result.OrderPartsInfo" alias="OrderPartsInfo"/>


    </typeAliases>

    <typeHandlers>
        <typeHandler handler="com.dandan.model.typeHandler.SexEnumTypeHandler" javaType="Sex"/>
    </typeHandlers>


<!--    <environments default="development">-->
<!--        <environment id="development">-->
<!--            &lt;!&ndash;指定数据库事务管理方法，有三种配置JDBC、MANAGED（采用容器方法管理事务在JNDI数据源中常用）、自定义 &ndash;&gt;-->
<!--            <transactionManager type="JDBC"/>-->
<!--            &lt;!&ndash;type配置对数据库连接方式，有四种配置UNPOOLED（非连接池数据库）、POOLED（连接池数据库）、JNDI（JNDI数据源）、自定义数据源 &ndash;&gt;-->
<!--            <dataSource type="POOLED">-->
<!--                <property name="driver" value="${driver}"/>-->
<!--                <property name="url" value="${url}"/>-->
<!--                <property name="username" value="${username}"/>-->
<!--                <property name="password" value="${password}"/>-->

<!--&lt;!&ndash;                <property name="driver" value="com.mysql.jdbc.Driver"/>&ndash;&gt;-->
<!--&lt;!&ndash;                <property name="url" value="jdbc:mysql://127.0.0.1:3306/dandan_01"/>&ndash;&gt;-->
<!--&lt;!&ndash;                <property name="username" value="root"/>&ndash;&gt;-->
<!--&lt;!&ndash;                <property name="password" value="p@swrd123"/>&ndash;&gt;-->
<!--            </dataSource>-->
<!--        </environment>-->
<!--    </environments>-->

<!--    <mappers>-->
<!--        <mapper resource="mybatis/mapper/UserMapper.xml"/>-->
<!--        <mapper resource="mybatis/mapper/OrderLogisticeMapper.xml"/>-->
<!--&lt;!&ndash;        <package name="mybatis/mapper"/>&ndash;&gt;-->
<!--    </mappers>-->




</configuration>