<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dandan.mapper.ProblemSelectMapper">

    <select id="selectOrderByTime" resultType="com.dandan.mapper.resultset.ProblemOrderResult">
        select t1.id AS orderId,t2.city_name AS cityName,t1.is_complaints_order AS complaintsOrder,t3.id seriousProblem
        from jiangyun_ops.t_order t1
        inner join jiangyun_ops.t_order_customer t2 on t2.order_id = t1.id
        left join jiangyun_ops.t_order_artisan_serious_complaint_reward_punishment t3 on t1.id = t3.order_id
        where t1.status_id = 14 and t1.customer_acceptance_time between #{startTime,jdbcType=VARCHAR} and #{endTime,jdbcType=VARCHAR}
        union all
        select t1.id AS orderId,t2.city_name AS cityName,t1.is_complaints_order AS complaintsOrder,t3.id seriousProblem
        from jiangyun_ops.t_order_history t1
        inner join jiangyun_ops.t_order_customer_history t2 on t1.id = t2.order_history_id
        left join jiangyun_ops.t_order_artisan_serious_complaint_reward_punishment_history t3 on t1.id = t3.order_history_id
        where t1.status_id = 1 and t1.customer_acceptance_time between #{startTime,jdbcType=VARCHAR} and #{endTime,jdbcType=VARCHAR}
    </select>

    <select id="selectCurrentProblemByOrderId" resultType="string">
        select group_concat(t2.first_category_id)
        from jiangyun_ops.t_problem t1
        inner join jiangyun_ops.t_problem_category t2 on t1.id = t2.problem_id
        where t1.order_id = #{orderId,jdbcType=VARCHAR}
        group by t1.order_id
    </select>

    <select id="selectHistoryProblemByOrderId" resultType="string">
        select group_concat(t2.first_category_id)
        from jiangyun_ops.t_problem_history t1
        inner join jiangyun_ops.t_problem_category_history t2 on t1.id = t2.problem_history_id
        where t1.order_id = #{orderId,jdbcType=VARCHAR}
        group by t1.order_id
    </select>


</mapper>