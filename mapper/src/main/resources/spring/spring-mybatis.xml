<?xml version="1.0" encoding="UTF-8"?>
<!-- XSD约束的XML配置文件 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.dandan.mapper"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass">
            <value>${database.driver.class}</value>
        </property>

        <property name="jdbcUrl">
            <value>${database.jdbc.url}</value>
        </property>

        <property name="user">
            <value>${database.user}</value>
        </property>

        <property name="password">
            <value>${database.password}</value>
        </property>

<!--        <property name="initialPoolSize">-->
<!--            <value>${database.initial.pool.size}</value>-->
<!--        </property>-->

<!--        <property name="minPoolSize">-->
<!--            <value>${database.min.pool.size}</value>-->
<!--        </property>-->

<!--        <property name="maxPoolSize">-->
<!--            <value>${database.max.pool.size}</value>-->
<!--        </property>-->

<!--        <property name="acquireIncrement">-->
<!--            <value>${database.acquire.increment}</value>-->
<!--        </property>-->

<!--        <property name="maxIdleTime">-->
<!--            <value>${database.max.idle.time}</value>-->
<!--        </property>-->

<!--        <property name="maxStatements">-->
<!--            <value>0</value>-->
<!--        </property>-->

        <!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3-->
        <property name="initialPoolSize" value="2"/>
        <!-- 连接池中保留的最小连接数，默认为：3-->
        <property name="minPoolSize" value="2"/>
        <!--连接池中保留的最大连接数。默认值: 15 -->
        <property name="maxPoolSize" value="15"/>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
        <property name="acquireIncrement" value="2"/>
        <!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次-->
        <property name="acquireRetryAttempts" value="0"/>
        <!--重新尝试的时间间隔，默认为：1000毫秒-->
        <property name="acquireRetryDelay" value="1000" />
        <!--最大空闲时间，3600秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
        <property name="maxIdleTime" value="3600"/>
        <!--c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 0-->
        <property name="maxStatements" value="0"/>
        <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 -->
        <property name="maxStatementsPerConnection" value="0"/>
        <!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。测试的表必须在初始数据源的时候就存在。Default: null-->
        <property name="preferredTestQuery" value="select 1"/>
        <!--每1800秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="1800"/>
        <!-- 获取连接时测试有效性，每次都验证连接是否可用 -->
        <property name="testConnectionOnCheckout" value="false"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:mybatis/mapper/*.xml"/>
    </bean>

    <bean id="mapperScannerConfigurer"
          class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.dandan.mapper"/>
    </bean>

</beans>
